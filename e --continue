[1mdiff --git a/contracts/PreSale.sol b/contracts/PreSale.sol[m
[1mindex a35577e..7f48214 100644[m
[1m--- a/contracts/PreSale.sol[m
[1m+++ b/contracts/PreSale.sol[m
[36m@@ -70,73 +70,5 @@[m [mfunction getAllTokens()  external view returns (TokenDetails[] memory) {}[m
 [m
 }[m
 [m
[31m-}[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-// SPDX-License-Identifier: MIT[m
[31m-[m
[31m-pragma solidity ^0.8.0;[m
[31m-[m
[31m-// interface of erc20 token[m
[31m-//  2 ways =>  frontend , within smart contract[m
[31m-[m
[31m-[m
[31m-interface IERC20 {[m
[31m-}[m
[31m-[m
[31m-contract ICOMarketplace{[m
[31m-[m
[31m-// tokenDetails[m
[31m-[m
[31m-struct TokenDetails {[m
[31m-[m
[31m-}[m
[31m-    [m
[31m-// outer layout[m
[31m-[m
[31m-// Modifiers[m
[31m-[m
[31m-modifier supportedToken(){}[m
[31m-[m
[31m-modifier onlyOwner() {}[m
[31m-[m
[31m-modifier onlyCreater() {}[m
[31m-[m
[31m-[m
[31m-recieve() external payable{}[m
[31m-[m
[31m- constructor() {}[m
[31m-[m
[31m-//  functions[m
[31m-[m
[31m-// contract level fnc[m
[31m-function createICOSale(address _token, uint256 _price) {}[m
[31m-[m
[31m-[m
[31m-// handling overflow$underflow[m
[31m-function multiply(uint256 x, uint256 y ) internal returns (uint256 z) {}[m
[31m-[m
[31m-[m
[31m-// buyToken[m
[31m-[m
[31m-// amount = how many token[m
[31m-// price = on current token price[m
[31m-function buyToken(address _token, uint256 _amount)  supportedToken(_token){[m
[31m-}[m
[31m-[m
[31m-// getting balance[m
[31m- function getBalance(uint _token) external view returns(uint256){}[m
[31m-[m
[31m-[m
[31m-// returning list of supported token[m
[31m- function getSupportedToken() view public returns (type name) {[m
[31m-    [m
[31m- } [m
[31m-}[m
[31m-[m
[31m-[m
 [m
 [m
